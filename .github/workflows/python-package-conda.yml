name: Build

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: test ls
      run: ls -R ~; echo ls -R ~;

    - name: Cache conda
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if etc/example-environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
          hashFiles('environment.yml') }}

    - name: Setup conda, install dependencies
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: anaconda-client-env
        channel-priority: strict
        environment-file: environment.yml
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

    - name: List conda binaries
      run: |
        ls -R $CONDA;
        ls -R $CONDA_PKGS_DIR;

    - name: Test with pytest using full test suite
      run: |
        $CONDA_PKGS_DIR/pytest --cov=./source --cov-report xml

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        $CONDA_PKGS_DIR/flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        $CONDA_PKGS_DIR/flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Upload coverage report to codecov
      uses: codecov/codecov-action@v1
      with: 
        token: ${{ secrets.codecov_token }}
        files: ./coverage.xml
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: true
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
